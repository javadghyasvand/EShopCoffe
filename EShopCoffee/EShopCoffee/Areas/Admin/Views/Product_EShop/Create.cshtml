@using EShopCoffee.Models.DataLayer
@model EShopCoffee.Models.DataLayer.Product_EShop

@{
    ViewBag.Title = "Create";
}
<h4 class="text-center font-weight-bold mt-4">افزودن محصول</h4>
<hr />
@using (Html.BeginForm("Create", "Product_EShop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        @if (ViewBag.ErorrSelectedGroups == true)
        {
            <div class="alert alert-danger">لطفا گروه محصول را انتخاب کنید </div>
        }
        @if (ViewBag.ErorrIsImage == true)
        {
            <div class="alert alert-danger">لطفا فایل عکس اپلود کنید </div>
        }
        <div class="form-group">
            <div class="input-group mb-3 ">
                <div class="input-group-prepend ">
                    @Html.LabelFor(model => model.Proudct_Title, htmlAttributes: new { @class = "input-group-text Bg-backgrund text-light label" })
                </div>
                @Html.EditorFor(model => model.Proudct_Title, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            <p class="text-center">
                @Html.ValidationMessageFor(model => model.Proudct_Title, "", new { @class = "text-danger" })
            </p>
        </div>

        <div class="form-group">
            <div class="input-group mb-3 ">
                <div class="input-group-prepend ">
                    @Html.LabelFor(model => model.Product_Count, htmlAttributes: new { @class = "input-group-text Bg-backgrund text-light label" })
                </div>
                @Html.EditorFor(model => model.Product_Count, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            <p class="text-center">
                @Html.ValidationMessageFor(model => model.Product_Count, "", new { @class = "text-danger" })
            </p>
        </div>

        <div class="form-group">
            <div class="input-group mb-3 ">
                <div class="input-group-prepend ">
                    @Html.LabelFor(model => model.Product_Price, htmlAttributes: new { @class = "input-group-text Bg-backgrund text-light label" })
                </div>
                @Html.EditorFor(model => model.Product_Price, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            <p class="text-center">
                @Html.ValidationMessageFor(model => model.Product_Price, "", new { @class = "text-danger" })
            </p>
        </div>

        <div class="form-group">
            <div class="input-group mb-3 ">
                <div class="input-group-prepend ">
                    <label class="input-group-text Bg-backgrund text-light label">کلمات کلیدی با # جداکنید</label>
                </div>
                <input class=" form-control" type="text" name="tags" placeholder="کلمات کلیدی را با # جدا کنید" />
            </div>
        </div>
        <div class="form-group">
            <div class="input-group mb-3 col-md-12  ">
                <div class="col-md-6">
                    <label class="input-group-text Bg-backgrund text-light label">
                        <div class="form-group form-check text-center mt-2">
                            @Html.EditorFor(model => model.Product_IsInStock, new { @class = "checkbox" })
                            @Html.LabelFor(model => model.Product_IsInStock, new { @class = "form-check-label" })
                        </div>
                    </label>
                    <p class="text-center">
                        @Html.ValidationMessageFor(model => model.Product_IsInStock, "", new { @class = "text-danger" })
                    </p>
                </div>
                <div class="col-md-6">
                    <label class="input-group-text Bg-backgrund text-light label">
                        <div class="form-group form-check text-center mt-2">
                            @Html.EditorFor(model => model.Product_Is_Delete, new { @class = "checkbox" })
                            @Html.LabelFor(model => model.Product_Is_Delete, new { @class = "form-check-label" })
                        </div>
                    </label>
                    <p class="text-center">
                        @Html.ValidationMessageFor(model => model.Product_Is_Delete, "", new { @class = "text-danger" })
                    </p>
                </div>

            </div>
        </div>
        <div class="form-group">
            <div class="card text-white  mb-3">
                <div class="card-header Bg-backgrund">انتخاب تصویر</div>
                <div class="card-body">
                    <div style="margin: 10px auto;" class="col-md-12">
                        <span class="offset-2 col-md-4">
                            <input type="file" style="margin: 10px;" id="imageProduct" name="imageProduct" />
                        </span>
                        <sapn class="col-md-8">
                            <img id="ImgPreviewProduct" name="ImgPreviewProduct" style="margin: 10px auto; max-width: 300px" class="img-thumbnail" src="~/Images/ProductImages/images.png" />
                        </sapn>
                    </div>
                </div>
            </div>
            <p class="text-center">
                @Html.ValidationMessageFor(model => model.Product_ImageName, "", new { @class = "text-danger" })
            </p>
        </div>

        <div class="form-group">
            <div class="card text-white  mb-3">
                <div class="card-header Bg-backgrund">توضیحات</div>
                <div class="card-body">
                    @Html.EditorFor(model => model.Product_Discription, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <p class="text-center">
                @Html.ValidationMessageFor(model => model.Product_Discription, "", new { @class = "text-danger" })
            </p>
        </div>
        <div class="form-group">
            <div class="card text-white  mb-3">
                <div class="card-header Bg-backgrund">انتخاب گروه</div>

                <div class="card-body text-dark">
                    @{
                        List<Product_Groups> groups = ViewBag.Groups;
                        <table class="table table-bordered">
                            <tr>
                                <th class="font-weight-bold Bg-backgrund text-light">
                                    گروه ها
                                </th>
                                <th class="font-weight-bold Bg-backgrund text-light">
                                    زیر گروه ها
                                </th>
                            </tr>

                            @foreach (var headGroups in groups.Where(g => g.Parent_Id == null))
                            {
                                <tr>
                                    <td>
                                        <table class="table table-borderless">
                                            <tr class="col-md-12">
                                                <th class="col-5">
                                                    <div class="form-group form-check">
                                                        <input type="checkbox" class="form-check-input" id="check-box+@headGroups.Group_Id" name="selectedGroup" value="@headGroups.Group_Id">
                                                        <label class="form-check-label" for="check-box+@headGroups.Group_Id">@headGroups.Group_Title</label>
                                                    </div>
                                                </th>
                                            </tr>
                                        </table>
                                    </td>
                                    <td>
                                        @if (groups.Any(g => g.Parent_Id == headGroups.Group_Id))
                                        {
                                            <ul>
                                                @foreach (var subgroups in groups.Where(g => g.Parent_Id == headGroups.Group_Id))
                                                {
                                                    <table class="table table-borderless">
                                                        <tr class="col-md-7">
                                                            <th class="col-8">
                                                                <div class="form-group form-check">
                                                                    <input type="checkbox" class="form-check-input" name="selectedGroup" id="check-box+@subgroups.Group_Id" value="@subgroups.Group_Id">
                                                                    <label class="form-check-label" for="check-box+@subgroups.Group_Id">@subgroups.Group_Title</label>
                                                                </div>
                                                            </th>
                                                        </tr>
                                                    </table>
                                                }
                                            </ul>
                                        }
                                    </td>
                                </tr>
                            }

                        </table>
                    }
                </div>
            </div>
        </div>


        <div class="form-group text-center">
            <div class="text-center">
                <button type="submit" title="ذخیره" class="btn bg-success  btn-block">
                    <i class="fa fa-save fa-2x text-light"></i>
                </button>
                <a href="@Url.Action("Index")" class="btn btn-info btn-block" title="بازگشت">
                    <i class="fa fa-arrow-circle-left fa-2x text-light"></i>
                </a>
            </div>
        </div>

    </div>
}

@section script
{
    <script>


        CKEDITOR.replace('Product_Discription');

        $('document').ready(function () {
            $("#imageProduct").change(function () {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#ImgPreviewProduct').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        });
    </script>
}
